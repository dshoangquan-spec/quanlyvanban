import streamlit as st
import pandas as pd
import tempfile
import os
from upload_to_dropbox import upload_file_to_dropbox  # tr·∫£ v·ªÅ ƒë∆∞·ªùng d·∫´n Dropbox
from upload_to_dropbox import download_bytes_from_dropbox

# Thi·∫øt l·∫≠p giao di·ªán
st.set_page_config(page_title="Qu·∫£n l√Ω VƒÉn b·∫£n", layout="wide")
st.title("üìö Qu·∫£n l√Ω VƒÉn b·∫£n - Dropbox")

with st.form("form_vanban"):
    so_van_ban = st.text_input("S·ªë vƒÉn b·∫£n")
    tieu_de = st.text_input("Ti√™u ƒë·ªÅ")
    co_quan = st.text_input("C∆° quan ban h√†nh")
    linh_vuc = st.text_input("Lƒ©nh v·ª±c")
    file_upload = st.file_uploader("ƒê√≠nh k√®m file (PDF, DOCX)", type=["pdf", "docx"])

    submitted = st.form_submit_button("L∆∞u vƒÉn b·∫£n")

    if submitted:
        dropbox_path = None

        if file_upload:
            # L∆∞u t·∫°m file r·ªìi upload
            suffix = os.path.splitext(file_upload.name)[1]
            with tempfile.NamedTemporaryFile(delete=False, suffix=suffix) as tmp:
                tmp.write(file_upload.read())
                tmp_path = tmp.name
            try:
                # ‚úÖ Upload v√†o th∆∞ m·ª•c c·ªë ƒë·ªãnh (ƒë·∫∑t trong upload_to_dropbox.py)
                dropbox_path = upload_file_to_dropbox(tmp_path, file_upload.name)
            except Exception as e:
                st.error(f"L·ªói upload: {e}")
            finally:
                os.remove(tmp_path)

        # Ghi v√†o CSV
        row = {
            "S·ªë vƒÉn b·∫£n": so_van_ban,
            "Ti√™u ƒë·ªÅ": tieu_de,
            "C∆° quan": co_quan,
            "Lƒ©nh v·ª±c": linh_vuc,
            "File Dropbox": dropbox_path if dropbox_path else "Kh√¥ng c√≥"
        }

        if not os.path.exists("vanban.csv"):
            pd.DataFrame([row]).to_csv("vanban.csv", index=False, encoding="utf-8-sig")
        else:
            pd.DataFrame([row]).to_csv("vanban.csv", mode="a", header=False, index=False, encoding="utf-8-sig")

        if dropbox_path:
            st.success("‚úÖ VƒÉn b·∫£n ƒë√£ ƒë∆∞·ª£c l∆∞u v√† upload l√™n Dropbox!")
            st.code(dropbox_path)
        else:
            st.warning("ƒê√£ l∆∞u th√¥ng tin nh∆∞ng ch∆∞a c√≥ file Dropbox.")

# Hi·ªÉn th·ªã danh s√°ch ƒë√£ l∆∞u
def _clean_path(val: str) -> str:
    """Lo·∫°i b·ªè chu·ªói th√¥ng b√°o c√≤n s√≥t, tr·∫£ v·ªÅ path Dropbox chu·∫©n /..."""
    if not isinstance(val, str):
        return ""
    return val.replace("‚úÖ ƒê√£ upload th√†nh c√¥ng t·ªõi:", "").strip()

st.subheader("üìÑ Danh s√°ch VƒÉn b·∫£n ƒë√£ l∆∞u")
if os.path.exists("vanban.csv"):
    # ƒê·ªçc CSV, tr√°nh NaN
    df = pd.read_csv("vanban.csv", keep_default_na=False)
    # Chu·∫©n h√≥a c·ªôt "File Dropbox" th√†nh path s·∫°ch
    if "File Dropbox" in df.columns:
        df["File Dropbox"] = df["File Dropbox"].apply(_clean_path)

    # Header h√†ng
    h = st.columns([0.4, 1.2, 1.6, 1.2, 1.2, 1.6, 0.8, 0.8])
    h[0].markdown("**#**")
    h[1].markdown("**S·ªë vƒÉn b·∫£n**")
    h[2].markdown("**Ti√™u ƒë·ªÅ**")
    h[3].markdown("**C∆° quan**")
    h[4].markdown("**Lƒ©nh v·ª±c**")
    h[5].markdown("**File Dropbox**")
    h[6].markdown("**T·∫£i**")
    h[7].markdown("**X√≥a**")

    for i, row in df.iterrows():
        dropbox_path = _clean_path(row.get("File Dropbox", ""))
        file_name = os.path.basename(dropbox_path) if dropbox_path.startswith("/") else ""

        cols = st.columns([0.4, 1.2, 1.6, 1.2, 1.2, 1.6, 0.8, 0.8])
        cols[0].write(f"**{i+1}**")
        cols[1].write(row.get("S·ªë vƒÉn b·∫£n", ""))
        cols[2].write(row.get("Ti√™u ƒë·ªÅ", ""))
        cols[3].write(row.get("C∆° quan", ""))
        cols[4].write(row.get("Lƒ©nh v·ª±c", ""))
        cols[5].write(file_name if file_name else "-")

        if dropbox_path and dropbox_path.startswith("/"):
            # N√∫t t·∫£i
            try:
                file_bytes = download_bytes_from_dropbox(dropbox_path)
                cols[6].download_button(
                    "‚¨áÔ∏è T·∫£i",
                    data=file_bytes,
                    file_name=file_name or "file",
                    mime="application/octet-stream",
                    key=f"dl_{i}",
                )
            except Exception as e:
                cols[6].warning("Kh√¥ng t·∫£i ƒë∆∞·ª£c")

            # N√∫t x√≥a
            if cols[7].button("üóë X√≥a", key=f"del_{i}"):
                try:
                    delete_file_from_dropbox(dropbox_path)   # X√≥a tr√™n Dropbox
                except Exception as e:
                    st.error(f"L·ªói x√≥a tr√™n Dropbox: {e}")
                # X√≥a kh·ªèi CSV & reload
                df = df.drop(index=i).reset_index(drop=True)
                df.to_csv("vanban.csv", index=False, encoding="utf-8-sig")
                st.success(f"ƒê√£ x√≥a: {file_name}")
                st.rerun()
        else:
            cols[6].write("-")
            cols[7].write("-")
else:
    st.info("Ch∆∞a c√≥ vƒÉn b·∫£n n√†o ƒë∆∞·ª£c l∆∞u.")
